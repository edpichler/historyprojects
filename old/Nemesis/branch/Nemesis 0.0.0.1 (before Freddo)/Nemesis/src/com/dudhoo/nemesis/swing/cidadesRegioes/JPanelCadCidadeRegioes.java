/*
 * JPanelCadCidadeRegioes.java
 *
 * Created on 8 de Fevereiro de 2006, 20:26
 */

package com.dudhoo.nemesis.swing.cidadesRegioes;

import com.dudhoo.evilframework.components.*;
import com.dudhoo.evilframework.swing.EvilAsk;
import com.dudhoo.nemesis.hibernate.Cidade;
import com.dudhoo.nemesis.hibernate.CidadeHome;
import com.dudhoo.nemesis.hibernate.Estado;
import com.dudhoo.nemesis.hibernate.EstadoHome;
import com.dudhoo.nemesis.hibernate.Pais;
import com.dudhoo.nemesis.hibernate.PaisHome;
import com.dudhoo.nemesis.swing.enumerations.OpcaoEscolhida;

import java.awt.Cursor;

import java.util.Iterator;
import java.util.List;

import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;


/**
 *
 * @author  duduzera
 */
public class JPanelCadCidadeRegioes extends javax.swing.JPanel {
    List <Pais>     listPaises;
    java.util.Set <Estado>   listEstados;
    java.util.Set <Cidade>   listCidades ;
        
    /** Creates new form JPanelCadCidadeRegioes */
    public JPanelCadCidadeRegioes() {        
        jbInit();
        refreshPaises();
        selecionaPrimeiro(this.jListPais);
    }
    
    private void refreshPaises(){
        try{
            this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
            PaisHome pHome = null;
            DefaultListModel mod = new DefaultListModel();
            pHome = new PaisHome();
            listPaises  = pHome.findAll();
            for(int i = 0; i < listPaises.size(); i++){
                mod.addElement(listPaises.get(i).getNome());
            }
            if(mod.size() == 0){
                mod.clear();
            }
            this.jListPais.setModel(mod);
        }catch(Exception xxx){
            new com.dudhoo.evilframework.swing.EvilError(null, false, xxx).setVisible(true);
        }finally{
            this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        }
    }
    
    private void selecionaPrimeiro(JList lista){
        if(lista.getModel().getSize() > 0 ){
            lista.setSelectedIndex(0);
        }
    }
    /**
     *Atualiza os estados conforme o país selecionado
     */
    private void refreshEstados(javax.swing.event.ListSelectionEvent eee){
        int index = this.jListPais.getSelectedIndex();
        if(index > -1){
            DefaultListModel mod = new DefaultListModel();
            listEstados =  listPaises.get(index).getEstados();
            Iterator it = listEstados.iterator();
            while(it.hasNext()){
                mod.addElement( ((Estado)it.next()).getNome() ) ;
            }
            this.jListEstado.setModel(mod);
        }
    }
    /**
     * Atualiza as cidades conforme o cidadeDialog selecionado
     */
    private void refreshCidades(javax.swing.event.ListSelectionEvent eee){
        int index = this.jListEstado.getSelectedIndex();
        if(index > -1){
            DefaultListModel mod = new DefaultListModel();
            Object o[] = listEstados.toArray();
            
            this.listCidades = ((Estado)o[index]).getCidades();
            
            Iterator it = listCidades.iterator();
            while(it.hasNext()){
                mod.addElement( ((Cidade)it.next()).getNome() ) ;
            }
            this.jListCidade.setModel(mod);
        }
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:jbInit
    private void jbInit() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelPais = new javax.swing.JPanel();
        jScrollPanePais = new javax.swing.JScrollPane();
        jListPais = new javax.swing.JList();
        jToolBarPais = new javax.swing.JToolBar();
        botaoNovo16Pais = new BotaoNovo16();
        botaoEditar16Pais = new BotaoEditar16();
        botaoDelete16Pais = new BotaoDelete16();
        jPanelEstado = new javax.swing.JPanel();
        jScrollPaneEstado = new javax.swing.JScrollPane();
        jListEstado = new javax.swing.JList();
        jToolBarEstado = new javax.swing.JToolBar();
        botaoNovo16Estado = new BotaoNovo16();
        botaoEditar16Estado = new BotaoEditar16();
        botaoDelete16Estado = new BotaoDelete16();
        jPanelCidade = new javax.swing.JPanel();
        jScrollPaneCidade = new javax.swing.JScrollPane();
        jListCidade = new javax.swing.JList();
        jToolBarcidade = new javax.swing.JToolBar();
        botaoNovo16Cidade = new BotaoNovo16();
        botaoEditar16Cidade = new BotaoEditar16();
        botaoDelete16Cidade = new BotaoDelete16();

        setLayout(new java.awt.GridBagLayout());

        jPanelPais.setLayout(new java.awt.BorderLayout());

        jPanelPais.setBorder(new javax.swing.border.TitledBorder("Pa\u00edses"));
        jListPais.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListPais.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListPaisValueChanged(evt);
            }
        });

        jScrollPanePais.setViewportView(jListPais);

        jPanelPais.add(jScrollPanePais, java.awt.BorderLayout.CENTER);

        botaoNovo16Pais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoNovo16PaisActionPerformed(evt);
            }
        });

        jToolBarPais.add(botaoNovo16Pais);

        botaoEditar16Pais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditar16PaisActionPerformed(evt);
            }
        });

        jToolBarPais.add(botaoEditar16Pais);

        botaoDelete16Pais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDelete16PaisActionPerformed(evt);
            }
        });

        jToolBarPais.add(botaoDelete16Pais);

        jPanelPais.add(jToolBarPais, java.awt.BorderLayout.NORTH);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(jPanelPais, gridBagConstraints);

        jPanelEstado.setLayout(new java.awt.BorderLayout());

        jPanelEstado.setBorder(new javax.swing.border.TitledBorder("Estados"));
        jListEstado.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListEstado.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListEstadoValueChanged(evt);
            }
        });

        jScrollPaneEstado.setViewportView(jListEstado);

        jPanelEstado.add(jScrollPaneEstado, java.awt.BorderLayout.CENTER);

        botaoNovo16Estado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoNovo16EstadoActionPerformed(evt);
            }
        });

        jToolBarEstado.add(botaoNovo16Estado);

        botaoEditar16Estado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditar16EstadoActionPerformed(evt);
            }
        });

        jToolBarEstado.add(botaoEditar16Estado);

        botaoDelete16Estado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDelete16EstadoActionPerformed(evt);
            }
        });

        jToolBarEstado.add(botaoDelete16Estado);

        jPanelEstado.add(jToolBarEstado, java.awt.BorderLayout.NORTH);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(jPanelEstado, gridBagConstraints);

        jPanelCidade.setLayout(new java.awt.BorderLayout());

        jPanelCidade.setBorder(new javax.swing.border.TitledBorder("Cidades"));
        jListCidade.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPaneCidade.setViewportView(jListCidade);

        jPanelCidade.add(jScrollPaneCidade, java.awt.BorderLayout.CENTER);

        botaoNovo16Cidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoNovo16CidadeActionPerformed(evt);
            }
        });

        jToolBarcidade.add(botaoNovo16Cidade);

        botaoEditar16Cidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditar16CidadeActionPerformed(evt);
            }
        });

        jToolBarcidade.add(botaoEditar16Cidade);

        botaoDelete16Cidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDelete16CidadeActionPerformed(evt);
            }
        });

        jToolBarcidade.add(botaoDelete16Cidade);

        jPanelCidade.add(jToolBarcidade, java.awt.BorderLayout.NORTH);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(jPanelCidade, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:jbInit
    
    private void jListEstadoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListEstadoValueChanged
        refreshCidades(evt);
    }//GEN-LAST:event_jListEstadoValueChanged
    
    private void jListPaisValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListPaisValueChanged
        refreshEstados(evt);
    }//GEN-LAST:event_jListPaisValueChanged
    
    private void botaoDelete16CidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDelete16CidadeActionPerformed
        int index = this.jListCidade.getSelectedIndex();
        int indexPais = this.jListPais.getSelectedIndex();
        int indexestado = this.jListEstado.getSelectedIndex();
        if(index > -1){
            if(éPraDeletar()){
                try{
                    new CidadeHome().delete( (Cidade) this.listCidades.toArray()[index] );
                    refreshPaises();
                    this.jListPais.setSelectedIndex(indexPais);
                    this.jListEstado.setSelectedIndex(indexestado);
                    selecionaPrimeiro( this.jListCidade);
                }catch(Exception xxx){
                    new com.dudhoo.evilframework.swing.EvilError(null, false, xxx).setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_botaoDelete16CidadeActionPerformed
    
    private void botaoEditar16CidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditar16CidadeActionPerformed
        int indexEstado = this.jListEstado.getSelectedIndex();
        int indexPais = this.jListPais.getSelectedIndex();
        int index = this.jListCidade.getSelectedIndex();
        if(index > -1){
            JDialogCidade esst = new JDialogCidade(null, true, (Cidade)this.listCidades.toArray()[index] );
            esst.setVisible(true);
            if(esst.getOpcao() == OpcaoEscolhida.SAVE){
                //TODO FAZER ATUALIZAR E EDITAR APENAS O SALVO
                refreshPaises();
                try{
                    jListPais.setSelectedIndex(indexPais);
                    jListEstado.setSelectedIndex(indexEstado);
                }catch(Exception xxx){
                    new com.dudhoo.evilframework.swing.EvilError(null, false, xxx).setVisible(true);
                }
                
            }
        }
    }//GEN-LAST:event_botaoEditar16CidadeActionPerformed
    
    private void botaoNovo16CidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoNovo16CidadeActionPerformed
        int index = this.jListEstado.getSelectedIndex();
        int indexPais = this.jListPais.getSelectedIndex();
        if(index > -1){
            JDialogCidade cidadeDialog = new JDialogCidade(null,true, (Estado) listEstados.toArray()[index] );
            cidadeDialog.setVisible(true);
            if(cidadeDialog.getOpcao() == OpcaoEscolhida.SAVE){
                refreshPaises();
                try{
                    jListPais.setSelectedIndex(indexPais);
                    jListEstado.setSelectedIndex(index);
                }catch(Exception xxx){
                    new com.dudhoo.evilframework.swing.EvilError(null, false, xxx).setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_botaoNovo16CidadeActionPerformed
    
    private void botaoDelete16EstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDelete16EstadoActionPerformed
        int index = jListEstado.getSelectedIndex();
        if(index > -1){
            if(éPraDeletar()){
                try{
                    new EstadoHome().delete( (Estado)this.listEstados.toArray()[index] );
                    int indexPais = jListPais.getSelectedIndex();
                    refreshPaises();
                    jListPais.setSelectedIndex(indexPais);
                    selecionaPrimeiro( this.jListEstado );
                }catch(Exception xxx){
                    new com.dudhoo.evilframework.swing.EvilError(null, false, xxx).setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_botaoDelete16EstadoActionPerformed
    
    
    private void botaoEditar16EstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditar16EstadoActionPerformed
        int index = this.jListEstado.getSelectedIndex();
        if(index > -1){
            JDialogEstado esst = new JDialogEstado(null, true, (Estado)this.listEstados.toArray()[index] );
            esst.setVisible(true);
            if(esst.getOpcao() == OpcaoEscolhida.SAVE){
                //TODO FAZER ATUALIZAR E EDITAR APENAS O SALVO
                int in = this.jListPais.getSelectedIndex();
                refreshPaises();
                try{
                    jListPais.setSelectedIndex(in);
                }catch(Exception xxx){
                    new com.dudhoo.evilframework.swing.EvilError(null, false, xxx).setVisible(true);
                }
                
            }
        }
    }//GEN-LAST:event_botaoEditar16EstadoActionPerformed
    
    private void botaoNovo16EstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoNovo16EstadoActionPerformed
        int index = this.jListPais.getSelectedIndex();
        if(index > -1){
            JDialogEstado estado = new JDialogEstado(null,true,this.listPaises.get(index));
            estado.setVisible(true);
            if(estado.getOpcao() == OpcaoEscolhida.SAVE){
                refreshPaises();
                try{
                    jListPais.setSelectedIndex(index);
                }catch(Exception xxx){
                    new com.dudhoo.evilframework.swing.EvilError(null, false, xxx).setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_botaoNovo16EstadoActionPerformed
    
    private void botaoDelete16PaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDelete16PaisActionPerformed
        int index = this.jListPais.getSelectedIndex();
        if(index > -1){
            if(éPraDeletar()){
                try{
                    new PaisHome().delete( this.listPaises.get(index) );
                    refreshPaises();
                    selecionaPrimeiro( this.jListPais );
                }catch(Exception xxx){
                    new com.dudhoo.evilframework.swing.EvilError(null, false, xxx).setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_botaoDelete16PaisActionPerformed
    private boolean éPraDeletar(){
        if(new EvilAsk(this).setVisible("Deseja deletar o item selecionado?") == JOptionPane.YES_OPTION){
            return true;
        }else{
            return false;
        }
    }
    private void botaoEditar16PaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditar16PaisActionPerformed
        int index = this.jListPais.getSelectedIndex();
        if(index > -1){
            JDialogPais ppx = new JDialogPais(null, true, this.listPaises.get(index));
            ppx.setVisible(true);
            if(ppx.getOpcao() == OpcaoEscolhida.SAVE){
                //TODO FAZER ATUALIZAR E EDITAR APENAS O SALVO
                int in = this.jListPais.getSelectedIndex();
                refreshPaises();
                try{
                    jListPais.setSelectedIndex(in);
                }catch(Exception xxx){
                    new com.dudhoo.evilframework.swing.EvilError(null, false, xxx).setVisible(true);
                }
                
            }
        }
        
    }//GEN-LAST:event_botaoEditar16PaisActionPerformed
    
    private void botaoNovo16PaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoNovo16PaisActionPerformed
        JDialogPais xxx =  new JDialogPais(null, true);
        xxx.setVisible(true);
        if(xxx.getOpcao()== OpcaoEscolhida.SAVE){
            refreshPaises();
            //TODO FAZER SELECIONAR O SALVO
        }
    }//GEN-LAST:event_botaoNovo16PaisActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private BotaoDelete16 botaoDelete16Cidade;
    private BotaoDelete16 botaoDelete16Estado;
    private BotaoDelete16 botaoDelete16Pais;
    private BotaoEditar16 botaoEditar16Cidade;
    private BotaoEditar16 botaoEditar16Estado;
    private BotaoEditar16 botaoEditar16Pais;
    private BotaoNovo16 botaoNovo16Cidade;
    private BotaoNovo16 botaoNovo16Estado;
    private BotaoNovo16 botaoNovo16Pais;
    private javax.swing.JList jListCidade;
    private javax.swing.JList jListEstado;
    private javax.swing.JList jListPais;
    private javax.swing.JPanel jPanelCidade;
    private javax.swing.JPanel jPanelEstado;
    private javax.swing.JPanel jPanelPais;
    private javax.swing.JScrollPane jScrollPaneCidade;
    private javax.swing.JScrollPane jScrollPaneEstado;
    private javax.swing.JScrollPane jScrollPanePais;
    private javax.swing.JToolBar jToolBarEstado;
    private javax.swing.JToolBar jToolBarPais;
    private javax.swing.JToolBar jToolBarcidade;
    // End of variables declaration//GEN-END:variables
}
